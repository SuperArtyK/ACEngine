getTypeName
boolToString call:[return]
isInRange call:[return]
toLowerRef call:[begin,end,transform] noreturn:[transform]
toLowerVal call:[begin,end,transform]
toUpperRef call:[begin,end,transform] noreturn:[transform]
toUpperVal call:[begin,end,transform]
isNum call:[strlen]
formatDate call:[localtime_s,sizeof,strftime]
getCurrentDate call:[formatDate,time] noreturn:[formatDate]
addrToStr call:[str] noreturn:[str]
sleepMS call:[milliseconds,sleep_for] noreturn:[sleep_for]
sleepUS call:[microseconds,sleep_for] noreturn:[sleep_for]
AEFileWriter call:[c_str,open] noreturn:[open]
AEFileWriter call:[open] noreturn:[open]
AEFileWriter call:[clear]
AEFileWriter call:[closeFile,flushFile] noreturn:[closeFile]
open call:[c_str,open] noreturn:[open]
writeString call:[c_str,empty,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeString call:[data,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeString call:[sizeof,strlen,writeData_ptr] noreturn:[writeData_ptr]
writeInt call:[sizeof,snprintf,writeString] noreturn:[writeString]
writeUInt call:[sizeof,snprintf,writeString] noreturn:[writeString]
writeFloat call:[sizeof,snprintf,static_assert,writeString] noreturn:[writeString]
writeBool call:[boolToString,writeString] noreturn:[writeString]
writeChar call:[writeByte] noreturn:[writeByte]
writeBytes call:[writeData_ptr] noreturn:[writeData_ptr]
writeBytes call:[data,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeByte call:[sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeData_ref call:[sizeof,writeData_ptr] noreturn:[writeData_ptr]
flushFile call:[fflush] noreturn:[fflush]
closeFile call:[clear,clearError,fclose] noreturn:[clearError,fclose]
isOpen call:[bool] noreturn:[bool]
getFileSize call:[_fseeki64,_ftelli64]
getFileName
getCursorPos call:[_ftelli64] noreturn:[_ftelli64]
setCursorPos call:[_fseeki64] noreturn:[_fseeki64]
getLastError
getTotalWrites
clearError
autoFlush call:[flushFile] noreturn:[flushFile]
openDirectly call:[fopen_s] noreturn:[fopen_s]
getTypeName < AEFileWriter >
writeData_ptr call:[autoFlush,fwrite] noreturn:[autoFlush]
write call:[sizeof,writeBool,writeByte,writeBytes,writeData_ref,writeFloat,writeInt,writeString,writeUInt] noreturn:[writeBool,writeByte,writeBytes,writeData_ref,writeFloat,writeInt,writeString,writeUInt]
open call:[_fseeki64,clear,closeFile,create_directories,openDirectly,rfind,strlen,substr] noreturn:[closeFile,create_directories]
typeToString
openLog call:[open,startWriter,writeToLog] noreturn:[startWriter]
closeLog call:[closeFile,getFileName,stopWriter,writeToLog] noreturn:[closeFile]
writeToLogDebug call:[writeToLog] noreturn:[writeToLog]
getLogName call:[getFileName] noreturn:[getFileName]
getEntryCount call:[load] noreturn:[load]
getLastError call:[getLastError] noreturn:[getLastError]
isOpen call:[isOpen] noreturn:[isOpen]
isWriting
writeStatus call:[getEntryCount,getFileName,to_string,writeToLog] noreturn:[writeToLog]
getTypeName < AELogger >
AEFrame
setFps call:[long,microseconds,now]
sleep call:[sleep_until] noreturn:[sleep_until]
resetTimePoint call:[now] noreturn:[now]
getFrameRate
getDelay call:[count] noreturn:[count]
getTypeName < AEFrame >
logfiller global:[mylog] call:[a,sleep,string,to_string,writeToLog] noreturn:[sleep]
main global:[mylog] call:[a,get,join,sizeof,sleep,string,t1,t2,to_string,writeToLog] noreturn:[sleep]
__AEModuleBase < AEFileWriter >
__AEModuleBase < AEFileWriter >
__AEModuleBase < AEFileWriter >
getModuleAmount call:[load] noreturn:[load]
getModuleName
__AEModuleBase < AELogger >
__AEModuleBase < AELogger >
__AEModuleBase < AELogger >
getModuleAmount call:[load] noreturn:[load]
getModuleName
__AEModuleBase < AEFrame >
__AEModuleBase < AEFrame >
__AEModuleBase < AEFrame >
getModuleAmount call:[load] noreturn:[load]
getModuleName
