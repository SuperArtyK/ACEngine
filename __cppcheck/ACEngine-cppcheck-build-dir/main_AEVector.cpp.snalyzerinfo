pi call:[T] noreturn:[T]
sinDeg call:[T,sin] noreturn:[sin]
cosDeg call:[T,cos] noreturn:[cos]
tanDeg call:[T,tan] noreturn:[tan]
cotDeg call:[T,tan] noreturn:[tan]
cscDeg call:[T,sin] noreturn:[sin]
secDeg call:[T,cos] noreturn:[cos]
roundToInt call:[T,Y,return] noreturn:[T]
absval call:[return]
fequals call:[return,static_assert]
equals call:[fequals,return] noreturn:[fequals,return]
sqrt call:[equals]
max call:[return]
min call:[return]
intLength call:[static_assert]
floatLength call:[abs,log10,return,static_assert]
boolToString call:[return]
toLowerRef call:[begin,end,transform] noreturn:[transform]
toLowerVal call:[begin,end,transform]
toUpperRef call:[begin,end,transform] noreturn:[transform]
toUpperVal call:[begin,end,transform]
isNum call:[strlen]
formatDate call:[localtime_s,sizeof,strftime]
formatDate call:[localtime_s,strftime] noreturn:[strftime]
getCurrentDate call:[formatDate,time] noreturn:[formatDate]
addrToStr call:[int,sizeof,snprintf]
sleepMS call:[milliseconds,sleep_for] noreturn:[sleep_for]
sleepUS call:[microseconds,sleep_for] noreturn:[sleep_for]
fopenCC call:[fopen_s]
charToInt call:[isInRange < char >,return]
intToChar call:[isInRange < int >,return]
isEqual
main call:[magnitude,normalise,sqrt]
isInRange < char > call:[return]
isInRange < int > call:[return]
zero
operator[]
operator[]
operator==
operator!=
operator+=
operator+ call:[operator+=] noreturn:[operator+=]
operator*=
operator* call:[operator*=] noreturn:[operator*=]
toString call:[append,push_back,reserve,to_string] noreturn:[append]
operator<< call:[toString]
magnitude
normDim call:[operator[]]
normalise
dotProduct
zero
operator[]
operator[]
operator==
operator!=
operator+=
operator+ call:[operator+=] noreturn:[operator+=]
operator*=
operator* call:[operator*=] noreturn:[operator*=]
toString call:[append,push_back,reserve,to_string] noreturn:[append]
operator<< call:[toString]
magnitude
normDim call:[operator[]]
normalise
dotProduct
zero
operator[]
operator[]
operator==
operator!=
operator+=
operator+ call:[operator+=] noreturn:[operator+=]
operator*=
operator* call:[operator*=] noreturn:[operator*=]
toString call:[append,push_back,reserve,to_string] noreturn:[append]
operator<< call:[toString]
magnitude
normDim call:[operator[]]
normalise
dotProduct
