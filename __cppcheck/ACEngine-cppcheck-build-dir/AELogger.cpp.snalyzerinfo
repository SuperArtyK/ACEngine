__getTypeName
boolToString call:[return]
toLowerRef call:[begin,end,transform] noreturn:[transform]
toLowerVal call:[begin,end,transform]
toUpperRef call:[begin,end,transform] noreturn:[transform]
toUpperVal call:[begin,end,transform]
isNum call:[strlen]
formatDate call:[localtime_s,sizeof,snprintf]
formatDate call:[localtime_s,snprintf]
getCurrentDate call:[formatDate,time] noreturn:[formatDate]
stringToDate call:[get_time,iss,mktime] noreturn:[mktime]
addrToStr call:[int,sizeof,snprintf]
sleepMS call:[milliseconds,sleep_for] noreturn:[sleep_for]
sleepUS call:[microseconds,sleep_for] noreturn:[sleep_for]
fopenCC call:[fopen_s]
charToInt call:[isInRange < char >,return]
intToChar call:[isInRange < int >,return]
isAlNum call:[begin,end,find_if_not,isalnum] noreturn:[end,isalnum]
isAlNumUs call:[begin,end,find_if_not,isalnum] noreturn:[end]
AEFileWriter
AEFileWriter call:[closeFile,flushFile] noreturn:[closeFile]
flushFile call:[fflush,isClosed]
closeFile call:[clear,fclose,isClosed]
writeString call:[c_str,empty,isClosed,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeString call:[data,empty,isClosed,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeString call:[isClosed,sizeof,strlen,writeData_ptr] noreturn:[writeData_ptr]
writeInt call:[isClosed,sizeof,snprintf,writeString] noreturn:[writeString]
writeUInt call:[isClosed,sizeof,snprintf,writeString] noreturn:[writeString]
writeBool call:[boolToString,writeString] noreturn:[writeString]
writeChar call:[writeByte] noreturn:[writeByte]
writeByte call:[sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeBytes call:[writeData_ptr] noreturn:[writeData_ptr]
writeBytes call:[data,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeData_ref call:[sizeof,writeData_ptr] noreturn:[writeData_ptr]
isOpen
isClosed call:[isOpen] noreturn:[isOpen]
getFileSize call:[_fseeki64,_ftelli64,isClosed]
getFullFileName
getRelativePath call:[isClosed,rfind,substr] noreturn:[substr]
getFileName call:[rfind,size,substr] noreturn:[substr]
getFullPath call:[absolute,generic_string,isClosed] noreturn:[generic_string]
getFilePtr
getCursorPos call:[_ftelli64,isClosed] noreturn:[_ftelli64]
setCursorPos call:[_fseeki64,isClosed] noreturn:[_fseeki64]
getTotalWrites call:[load] noreturn:[load]
getLastWrittenAmount
autoFlush call:[flushFile,load] noreturn:[flushFile]
__getTypeName < AEFileWriter >
writeFloat call:[isClosed,sizeof,snprintf,static_assert,writeString] noreturn:[writeString]
write call:[isClosed,sizeof,writeBool,writeByte,writeBytes,writeData_ref,writeFloat,writeInt,writeString,writeUInt] noreturn:[writeBool,writeByte,writeBytes,writeData_ref,writeFloat,writeInt,writeString,writeUInt]
operator= call:[copyEntry]
copyEntryFull call:[memcpy,store] noreturn:[store]
copyEntry call:[memcpy,store] noreturn:[store]
copyEntryReduced call:[memcpy]
clearEntry call:[memset]
makeQueue call:[abort] noreturn:[abort]
formatEntry call:[formatDate,sizeof,snprintf,typeToString] noreturn:[snprintf]
typeToString
stringToType call:[size]
parseStringEntry call:[clearEntry,data,isAlNumUs,memcmp,memcpy,size,sizeof,sscanf,stringToDate,stringToType,strstr,strvMname] noreturn:[memcpy]
AELogger
AELogger call:[emplace_back,reserve] noreturn:[emplace_back]
openLog call:[openFile,startWriter,string,writeToLog] noreturn:[startWriter]
openLog call:[openLog,string] noreturn:[openLog]
closeLog call:[closeFile,getFullFileName,isClosed,stopWriter,writeToLog]
writeToLogDebug call:[writeToLog] noreturn:[writeToLog]
writeStatus call:[getEntryCount,getFullFileName,to_string,writeToLog] noreturn:[writeToLog]
getLogName call:[getFullFileName] noreturn:[getFullFileName]
getLogPath call:[getRelativePath] noreturn:[getRelativePath]
getLogAbsolutePath call:[getFullPath] noreturn:[getFullPath]
getEntryCount call:[getTotalWrites] noreturn:[getTotalWrites]
isOpen call:[isOpen] noreturn:[isOpen]
isClosed call:[isClosed] noreturn:[isClosed]
isWriting
genLogName call:[c_str,data,getCurrentDate,snprintf,substr]
__getTypeName < AELogger >
AELogger call:[absolute,emplace_back,generic_string,isOpen,reserve,startWriter,writeToLog] noreturn:[startWriter]
AELogger call:[clear,closeLog,size,writeToLog] noreturn:[clear]
startWriter call:[closeLog,joinable,runtime_error,thread,writeToLog]
stopWriter call:[join,joinable,writeToLog]
writeToLog call:[data,emplace_back,empty,isAlNumUs,isClosed,isInRange < int8_t >,lock,makeQueue,memcpy,ptrFromIndex,size,time,to_string,writeToLogDebug] noreturn:[ptrFromIndex,writeToLogDebug]
writeToLog call:[copyEntryReduced,emplace_back,isClosed,lock,makeQueue,ptrFromIndex,time,to_string,writeToLogDebug] noreturn:[ptrFromIndex,time,writeToLogDebug]
logWriterThread call:[clearEntry,flushFile,formatEntry,load,sizeof,sleepUS,strlen,time,writeData_ptr,writeToLog] noreturn:[flushFile,sleepUS]
ptrFromIndex call:[size]
isInRange < char > call:[return]
isInRange < int > call:[return]
isInRange < int8_t > call:[return]
__AEModuleBase < AEFileWriter >
__AEModuleBase < AEFileWriter >
__AEModuleBase < AEFileWriter >
getModuleAmount call:[load] noreturn:[load]
getModuleName
__AEModuleBase < AELogger >
__AEModuleBase < AELogger >
__AEModuleBase < AELogger >
getModuleAmount call:[load] noreturn:[load]
getModuleName
