getTypeName
boolToString call:[return]
toLowerRef call:[begin,end,transform] noreturn:[transform]
toLowerVal call:[begin,end,transform]
toUpperRef call:[begin,end,transform] noreturn:[transform]
toUpperVal call:[begin,end,transform]
isNum call:[strlen]
formatDate call:[localtime_s,sizeof,strftime]
formatDate call:[localtime_s,strftime] noreturn:[strftime]
getCurrentDate call:[formatDate,time] noreturn:[formatDate]
stringToDate call:[get_time,iss,mktime] noreturn:[mktime]
addrToStr call:[int,sizeof,snprintf]
sleepMS call:[milliseconds,sleep_for] noreturn:[sleep_for]
sleepUS call:[microseconds,sleep_for] noreturn:[sleep_for]
fopenCC call:[fopen_s]
charToInt call:[isInRange < char >,return]
intToChar call:[isInRange < int >,return]
isAlNum call:[begin,end,find_if_not,isalnum] noreturn:[end,isalnum]
isAlNumUs call:[begin,end,find_if_not,isalnum] noreturn:[end]
AEFileWriter
AEFileWriter call:[closeFile,flushFile] noreturn:[closeFile]
flushFile call:[fflush,isClosed]
closeFile call:[clear,clearError,fclose,isClosed] noreturn:[clearError]
writeString call:[c_str,empty,isClosed,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeString call:[data,empty,isClosed,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeString call:[isClosed,sizeof,strlen,writeData_ptr] noreturn:[writeData_ptr]
writeInt call:[isClosed,sizeof,snprintf,writeString] noreturn:[writeString]
writeUInt call:[isClosed,sizeof,snprintf,writeString] noreturn:[writeString]
writeBool call:[boolToString,writeString] noreturn:[writeString]
writeChar call:[writeByte] noreturn:[writeByte]
writeByte call:[sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeBytes call:[writeData_ptr] noreturn:[writeData_ptr]
writeBytes call:[data,size,sizeof,writeData_ptr] noreturn:[writeData_ptr]
writeData_ref call:[sizeof,writeData_ptr] noreturn:[writeData_ptr]
isOpen call:[bool] noreturn:[bool]
isClosed call:[isOpen] noreturn:[isOpen]
getFileSize call:[_fseeki64,_ftelli64,isClosed]
getFullFileName
getRelativePath call:[rfind,substr] noreturn:[substr]
getFileName call:[rfind,size,substr] noreturn:[substr]
getFullPath call:[absolute,generic_string] noreturn:[generic_string]
getFilePtr
getCursorPos call:[_ftelli64,isClosed] noreturn:[_ftelli64]
setCursorPos call:[_fseeki64,isClosed] noreturn:[_fseeki64]
getLastError
getTotalWrites
getLastWrittenAmount
clearError
autoFlush call:[flushFile] noreturn:[flushFile]
getTypeName < AEFileWriter >
writeFloat call:[isClosed,sizeof,snprintf,static_assert,writeString] noreturn:[writeString]
write call:[isClosed,sizeof,writeBool,writeByte,writeBytes,writeData_ref,writeFloat,writeInt,writeString,writeUInt] noreturn:[writeBool,writeByte,writeBytes,writeData_ref,writeFloat,writeInt,writeString,writeUInt]
AELogger
openLog call:[openFile,startWriter,string,writeToLog] noreturn:[startWriter]
closeLog call:[closeFile,getFullFileName,stopWriter,writeToLog] noreturn:[closeFile]
writeToLogDebug call:[string,writeToLog] noreturn:[writeToLog]
getLogName call:[getFullFileName] noreturn:[getFullFileName]
getLogPath call:[getRelativePath] noreturn:[getRelativePath]
getLogAbsolutePath call:[getFullPath] noreturn:[getFullPath]
getEntryCount call:[load] noreturn:[load]
getLastError call:[getLastError] noreturn:[getLastError]
isOpen call:[isOpen] noreturn:[isOpen]
isClosed call:[isOpen] noreturn:[isOpen]
isWriting
writeStatus call:[getEntryCount,getFullFileName,to_string,writeToLog] noreturn:[writeToLog]
genLogName call:[c_str,data,getCurrentDate,snprintf,substr]
typeToString
getTypeName < AELogger >
makeQueue call:[bool,runtime_error] noreturn:[runtime_error]
AELogger call:[absolute,emplace_back,generic_string,isOpen,reserve,startWriter,writeToLog] noreturn:[startWriter]
AELogger call:[clear,closeLog,size,writeToLog] noreturn:[clear]
startWriter call:[closeLog,joinable,runtime_error,thread,writeToLog] noreturn:[runtime_error]
stopWriter call:[join,joinable,writeToLog] noreturn:[join]
writeToLog call:[data,emplace_back,empty,isAlNumUs,isClosed,isInRange < int >,lock,makeQueue,memcpy,ptrFromIndex,size,time,to_string,uint64_t,writeToLogDebug] noreturn:[ptrFromIndex,writeToLogDebug]
logWriterThread call:[bool,c_str,data,formatDate,getCurrentDate,load,memset,sizeof,sleepMS,sleepUS,snprintf,strlen,typeToString,uint64_t,writeData_ptr,writeToLog] noreturn:[sleepMS,sleepUS,writeData_ptr]
ptrFromIndex call:[size]
isInRange < char > call:[return]
isInRange < int > call:[return]
__AEModuleBase < AEFileWriter >
__AEModuleBase < AEFileWriter >
__AEModuleBase < AEFileWriter >
getModuleAmount call:[load] noreturn:[load]
getModuleName
__AEModuleBase < AELogger >
__AEModuleBase < AELogger >
__AEModuleBase < AELogger >
getModuleAmount call:[load] noreturn:[load]
getModuleName
