C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:3:1: warning: do not use namespace using-directives; use using-declarations instead [google-build-using-namespace]
using namespace std;
^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:5:8: warning: accessing fields in struct 'ab' is inefficient due to poor alignment; currently aligned to 1 bytes, but recommended alignment is 16 bytes [altera-struct-pack-align]
struct ab {
       ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:5:8: note: use "__attribute__((aligned(16)))" to align struct 'ab' to 16 bytes
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:6:2: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
        char a[16]{};
        ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:6:9: warning: 16 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
        char a[16]{};
               ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:10:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
std::string outputVec(std::vector<char>& a) {
~~~~~~~~~~~ ^
auto                                        -> std::string
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:10:42: warning: parameter name 'a' is too short, expected at least 3 characters [readability-identifier-length]
std::string outputVec(std::vector<char>& a) {
                                         ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:13:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
        for (std::size_t i = 0; i < a.size(); i++) {
        ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:13:2: warning: use range-based for loop instead [modernize-loop-convert]
        for (std::size_t i = 0; i < a.size(); i++) {
        ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            (char i : a)
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:20:5: warning: an exception may be thrown in function 'main' which should not throw exceptions [bugprone-exception-escape]
int main(){
    ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:20:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int main(){
~~~ ^
auto       -> int
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:24:2: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
        std::string a,b;
        ^~~~~~~~~~~~~~~~
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:24:14: warning: variable name 'a' is too short, expected at least 3 characters [readability-identifier-length]
        std::string a,b;
                    ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:24:16: warning: variable name 'b' is too short, expected at least 3 characters [readability-identifier-length]
        std::string a,b;
                      ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:26:2: warning: variable 'bl' of type 'bool' can be declared 'const' [misc-const-correctness]
        bool bl = false;
        ^
             const 
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:26:7: warning: variable name 'bl' is too short, expected at least 3 characters [readability-identifier-length]
        bool bl = false;
             ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:28:10: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        cout << int(myfr.readStringNL(a, 200)) << endl;
                ^~~
                static_cast<int>
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:28:35: warning: 200 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
        cout << int(myfr.readStringNL(a, 200)) << endl;
                                         ^
C:\Users\artem\CODING\ACEngine\AEFileReader\main_AEFileReader.cpp:30:23: warning: 200 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]
        myfr.readStringNL(b, 200);
                             ^



199179 warnings generated.
Suppressed 199156 warnings (199156 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
