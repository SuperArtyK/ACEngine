C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:15:2: warning: calling a function that uses a default argument is disallowed [fuchsia-default-arguments-calls]
        m_sFilename(fname), m_ullTotalReads(0), m_szLastReadAmount(0), m_fpFilestr(nullptr), m_cLastError(AEFR_ERR_NOERROR) {
        ^
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring:2884:70: note: default parameter was declared here
    _CONSTEXPR20 explicit basic_string(const _StringViewIsh& _Right, const _Alloc& _Al = _Alloc())
                                                                     ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:20:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
int AEFileReader::openFile(const std::string_view fname) {
~~~               ^
auto                                                     -> int
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:42:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
cint AEFileReader::readString(char* str, const std::size_t dcount) noexcept {
~~~~               ^
auto                                                                        -> cint
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:44:7: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        if (!bool(dcount) || !bool(str)) {
             ^~~~
             static_cast<bool>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:44:24: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
        if (!bool(dcount) || !bool(str)) {
                              ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:53:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
cint AEFileReader::readStringNL(char* str, const int dcount) noexcept {
~~~~               ^
auto                                                                  -> cint
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:56:7: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
        if (!bool(str) || !bool(dcount)) {
             ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:56:21: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        if (!bool(str) || !bool(dcount)) {
                           ^~~~
                           static_cast<bool>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:61:25: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        std::memset(str, NULL, std::size_t(dcount) + 1);
                               ^~~~~~~~~~~
                               static_cast<std::size_t>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:62:20: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
        const bool temp = bool(std::fgets(str, dcount, this->m_fpFilestr));
                          ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:69:7: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        if ( bool(std::feof(this->m_fpFilestr)) ) {
             ^~~~
             static_cast<bool>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:78:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
cint AEFileReader::readStringNULL(char* str, const llint dcount) {
~~~~               ^
auto                                                             -> cint
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:81:7: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
        if (!bool(str) || dcount < 1) {
             ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:92:22: warning: C-style casts are discouraged; use static_cast (if needed, the cast may be redundant) [google-readability-casting]
        fseek(m_fpFilestr, -llint((dcount - (nulchar - str) - 1)), SEEK_CUR);
                            ^~~~~
                            static_cast<llint>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:98:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
cint AEFileReader::readBoolString(bool& num) noexcept {
~~~~               ^
auto                                                  -> cint
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:100:2: warning: do not declare C-style arrays, use std::array<> instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]
        char str[sizeof("false")]{};
        ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:102:33: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
        cint temp = this->readData_ptr(str, 4, sizeof(char)); //read possible "true"
                                       ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:103:2: warning: kernel performance could be improved by unrolling this loop with a '#pragma unroll' directive [altera-unroll-loops]
        for (int i = 0; i < 4; i++) {
        ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:104:3: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
                str[i] = std::tolower(str[i]);
                ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:104:12: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]
                str[i] = std::tolower(str[i]);
                         ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:104:25: warning: do not use array subscript when the index is not an integer constant expression [cppcoreguidelines-pro-bounds-constant-array-index]
                str[i] = std::tolower(str[i]);
                                      ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:107:7: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        if (!bool(std::memcmp(str, "true", sizeof("true") ) ) ) {
             ^~~~
             static_cast<bool>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:107:24: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
        if (!bool(std::memcmp(str, "true", sizeof("true") ) ) ) {
                              ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:113:7: warning: implicit conversion 'int' -> bool [readability-implicit-bool-conversion]
        if (!std::memcmp(str, "false", sizeof("false") ) ) {
            ~^
                                                         == 0
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:113:19: warning: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]
        if (!std::memcmp(str, "false", sizeof("false") ) ) {
                         ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:121:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
cint AEFileReader::readData_ptr(void* cdata, const std::size_t dcount, const std::size_t dsize) noexcept {
~~~~               ^
auto                                                                                                     -> cint
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:124:7: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        if (!bool(dcount) || !bool(dsize) || !bool(cdata) ) {
             ^~~~
             static_cast<bool>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:124:24: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
        if (!bool(dcount) || !bool(dsize) || !bool(cdata) ) {
                              ^~~~
                              static_cast<bool>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:124:40: warning: C-style casts are discouraged; use static_cast/const_cast/reinterpret_cast [google-readability-casting]
        if (!bool(dcount) || !bool(dsize) || !bool(cdata) ) {
                                              ^
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:132:7: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
                if (bool(std::feof(this->m_fpFilestr) ) ) {
                    ^~~~
                    static_cast<bool>
C:\Users\artem\CODING\ACEngine\AEFileReader\src\AEFileReader.cpp:135:7: warning: C-style casts are discouraged; use static_cast [google-readability-casting]
                if (bool(std::ferror(this->m_fpFilestr) ) ) {
                    ^~~~
                    static_cast<bool>



207043 warnings generated.
Suppressed 207006 warnings (207006 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
