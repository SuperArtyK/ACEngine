boolToString call:[return]
toLowerRef call:[begin,end,transform] noreturn:[transform]
toLowerVal call:[begin,end,transform]
toUpperRef call:[begin,end,transform] noreturn:[transform]
toUpperVal call:[begin,end,transform]
isNum call:[strlen]
formatDate call:[localtime_s,sizeof,snprintf]
formatDate call:[localtime_s,snprintf]
getCurrentDate call:[formatDate,time] noreturn:[formatDate]
stringToDate call:[get_time,iss,mktime] noreturn:[mktime]
addrToStr call:[int,sizeof,snprintf]
sleepMS call:[milliseconds,sleep_for] noreturn:[sleep_for]
sleepUS call:[microseconds,sleep_for] noreturn:[sleep_for]
fopenCC call:[fopen_s]
charToInt call:[isInRange < char >,return]
intToChar call:[isInRange < int >,return]
isAlNum call:[begin,end,find_if_not,isalnum] noreturn:[end,isalnum]
isAlNumUs call:[begin,end,find_if_not,isalnum] noreturn:[end]
pi call:[T] noreturn:[T]
tau call:[T] noreturn:[T]
piHalf call:[T] noreturn:[T]
piQuarter call:[T] noreturn:[T]
e call:[T] noreturn:[T]
sqrt2 call:[T] noreturn:[T]
sinDeg call:[T,sin] noreturn:[sin]
cosDeg call:[T,cos] noreturn:[cos]
tanDeg call:[T,tan] noreturn:[tan]
cotDeg call:[T,tan] noreturn:[tan]
cscDeg call:[T,sin] noreturn:[sin]
secDeg call:[T,cos] noreturn:[cos]
absval call:[return]
fequals call:[return,static_assert]
equals call:[fequals,return] noreturn:[fequals,return]
sqrt call:[T,equals] noreturn:[T]
intPow
max call:[return]
min call:[return]
lengthOfInt call:[static_assert]
lengthOfFloat call:[abs,log10,return,static_assert]
hypot
isInf call:[infinity,return,static_assert] noreturn:[return]
isNan call:[return,static_assert] noreturn:[return]
isFinite call:[static_assert]
floorToInt call:[T,return] noreturn:[T]
ceilToInt call:[T,return]
truncToInt call:[T] noreturn:[T]
_getTrigTableIndex call:[return]
sinDeg_table call:[_getTrigTableIndex,roundToInt < int64_t , double >]
cosDeg_table call:[_getTrigTableIndex,roundToInt < int64_t , double >]
tanDeg_table call:[_getTrigTableIndex,roundToInt < int64_t , double >]
cotDeg_table call:[_getTrigTableIndex,roundToInt < int64_t , double >]
cscDeg_table call:[_getTrigTableIndex,roundToInt < int64_t , double >]
secDeg_table call:[_getTrigTableIndex,roundToInt < int64_t , double >]
sinDeg_tableInterp call:[_getTrigTableIndex,lerp < float >,truncToInt] noreturn:[lerp < float >]
cosDeg_tableInterp call:[_getTrigTableIndex,lerp < float >,truncToInt] noreturn:[lerp < float >]
tanDeg_tableInterp call:[_getTrigTableIndex,lerp < float >,truncToInt] noreturn:[lerp < float >]
cotDeg_tableInterp call:[_getTrigTableIndex,lerp < float >,truncToInt] noreturn:[lerp < float >]
cscDeg_tableInterp call:[_getTrigTableIndex,lerp < float >,truncToInt] noreturn:[lerp < float >]
secDeg_tableInterp call:[_getTrigTableIndex,lerp < float >,truncToInt] noreturn:[lerp < float >]
main call:[addrToStr,boolToString,cosDeg_table,cotDeg_table,cscDeg_table,get,getCurrentDate,isInRange < int >,isNum,root < float >,secDeg_table,setprecision,sinDeg,sinDeg_table,sinDeg_tableInterp,sizeof,tanDeg_table,toLowerVal,toUpperVal]
roundToInt < int64_t , double > call:[double,int64_t,return] noreturn:[int64_t]
lerp < float >
root < float > call:[equals,float]
isInRange < char > call:[return]
isInRange < int > call:[return]
