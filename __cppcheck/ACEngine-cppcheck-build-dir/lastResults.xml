<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.11"/>
    <errors>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: &amp;amp;tstruct" verbose="Uninitialized variable: &amp;amp;tstruct" cwe="457" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\include\AEUtils.hpp" line="188"/>
        </error>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: &amp;amp;tstruct" verbose="Uninitialized variable: &amp;amp;tstruct" cwe="457" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\include\AEUtils.hpp" line="210"/>
        </error>
        <error id="y2038-unsafe-call" severity="warning" msg="time is Y2038-unsafe" verbose="time is Y2038-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/AEFileReader.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\include\AEUtils.hpp" line="224"/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="..\..\..\..\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring" line="2884" info="default parameter was declared here"/>
            <location file="AEFileReader\src\AEFileReader.cpp" line="15" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="20"/>
        </error>
        <error id="clang-tidy-readability-container-size-empty" severity="style" msg="the &amp;#039;empty&amp;#039; method should be used to check for emptiness instead of &amp;#039;size&amp;#039; " verbose="the &amp;#039;empty&amp;#039; method should be used to check for emptiness instead of &amp;#039;size&amp;#039; " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="..\..\..\..\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\xstring" line="1295" info="method &amp;#039;basic_string_view&amp;#039;::empty() defined here"/>
            <location file="AEFileReader\src\AEFileReader.cpp" line="21" info="the &amp;#039;empty&amp;#039; method should be used to check for emptiness instead of &amp;#039;size&amp;#039; "/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;size_type&amp;#039; (aka &amp;#039;unsigned long long&amp;#039;) -&amp;gt; bool " verbose="implicit conversion &amp;#039;size_type&amp;#039; (aka &amp;#039;unsigned long long&amp;#039;) -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="21"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;FILE *&amp;#039; (aka &amp;#039;_iobuf *&amp;#039;) -&amp;gt; bool " verbose="implicit conversion &amp;#039;FILE *&amp;#039; (aka &amp;#039;_iobuf *&amp;#039;) -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="30"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="42"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;std::size_t&amp;#039; (aka &amp;#039;unsigned long long&amp;#039;) -&amp;gt; bool " verbose="implicit conversion &amp;#039;std::size_t&amp;#039; (aka &amp;#039;unsigned long long&amp;#039;) -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="44"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="44"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="53"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="56"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="56"/>
        </error>
        <error id="clang-tidy-google-readability-casting" severity="style" msg="C-style casts are discouraged; use static_cast " verbose="C-style casts are discouraged; use static_cast " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="61"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="62"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="69"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="78"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;char *&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="81"/>
        </error>
        <error id="clang-tidy-google-readability-casting" severity="style" msg="C-style casts are discouraged; use static_cast (if needed, the cast may be redundant) " verbose="C-style casts are discouraged; use static_cast (if needed, the cast may be redundant) " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="92"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="98"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" verbose="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="100"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="100"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="102"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="103"/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-pro-bounds-constant-array-index" severity="style" msg="do not use array subscript when the index is not an integer constant expression " verbose="do not use array subscript when the index is not an integer constant expression " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="104"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="narrowing conversion from &amp;#039;int&amp;#039; to signed type &amp;#039;char&amp;#039; is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" verbose="narrowing conversion from &amp;#039;int&amp;#039; to signed type &amp;#039;char&amp;#039; is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="104"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="107"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="107"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="107"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="113"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="113"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="6 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="113"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="121"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;std::size_t&amp;#039; (aka &amp;#039;unsigned long long&amp;#039;) -&amp;gt; bool " verbose="implicit conversion &amp;#039;std::size_t&amp;#039; (aka &amp;#039;unsigned long long&amp;#039;) -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="124"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;void *&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;void *&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="124"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="132"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AEFileReader/src/AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="135"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;readBoolString&amp;#039; is never used." verbose="The function &amp;#039;readBoolString&amp;#039; is never used." cwe="561" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\src\AEFileReader.cpp" line="98"/>
        </error>
        <error id="y2038-unsafe-call" severity="warning" msg="time is Y2038-unsafe" verbose="time is Y2038-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/AELogger.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="137"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="16"/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-owning-memory" severity="style" msg="initializing non-owner &amp;#039;AELogEntry *&amp;#039; with a newly created &amp;#039;gsl::owner&amp;lt;&amp;gt;&amp;#039; " verbose="initializing non-owner &amp;#039;AELogEntry *&amp;#039; with a newly created &amp;#039;gsl::owner&amp;lt;&amp;gt;&amp;#039; " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="22"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="use auto when initializing with new to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]" verbose="use auto when initializing with new to avoid duplicating the type name [hicpp-use-auto,modernize-use-auto]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="22"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="23"/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-pro-bounds-pointer-arithmetic" severity="style" msg="do not use pointer arithmetic " verbose="do not use pointer arithmetic " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="24"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;AELogEntry *&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;AELogEntry *&amp;#039; -&amp;gt; bool " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="27"/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-pro-bounds-pointer-arithmetic" severity="style" msg="do not use pointer arithmetic " verbose="do not use pointer arithmetic " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="28"/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-pro-bounds-pointer-arithmetic" severity="style" msg="do not use pointer arithmetic " verbose="do not use pointer arithmetic " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="31"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="narrowing conversion from &amp;#039;int&amp;#039; to signed type &amp;#039;cint&amp;#039; (aka &amp;#039;signed char&amp;#039;) is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" verbose="narrowing conversion from &amp;#039;int&amp;#039; to signed type &amp;#039;cint&amp;#039; (aka &amp;#039;signed char&amp;#039;) is implementation-defined [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="40"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion bool -&amp;gt; &amp;#039;int&amp;#039; " verbose="implicit conversion bool -&amp;gt; &amp;#039;int&amp;#039; " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="40"/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-pro-bounds-pointer-arithmetic" severity="style" msg="do not use pointer arithmetic " verbose="do not use pointer arithmetic " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="41"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="48"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;~AELogger&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;~AELogger&amp;#039; which should not throw exceptions " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="53"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="54"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="57"/>
        </error>
        <error id="clang-tidy-modernize-loop-convert" severity="style" msg="use range-based for loop instead " verbose="use range-based for loop instead " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="57"/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-owning-memory" severity="style" msg="deleting a pointer through a type that is not marked &amp;#039;gsl::owner&amp;lt;&amp;gt;&amp;#039;; consider using a smart pointer instead " verbose="deleting a pointer through a type that is not marked &amp;#039;gsl::owner&amp;lt;&amp;gt;&amp;#039;; consider using a smart pointer instead " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="..\..\..\..\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\yvals_core.h" line="878" info="expanded from macro &amp;#039;_CONSTEXPR20&amp;#039;"/>
            <location file="..\..\..\..\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector" line="1882" info="variable declared here"/>
            <location file="AELogger\src\AELogger.cpp" line="58" info="deleting a pointer through a type that is not marked &amp;#039;gsl::owner&amp;lt;&amp;gt;&amp;#039;; consider using a smart pointer instead "/>
        </error>
        <error id="clang-tidy-modernize-redundant-void-arg" severity="style" msg="redundant void argument list in function definition " verbose="redundant void argument list in function definition " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="63"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="64"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="66"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="73"/>
        </error>
        <error id="clang-tidy-modernize-redundant-void-arg" severity="style" msg="redundant void argument list in function definition " verbose="redundant void argument list in function definition " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="80"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="127" info="inferred assignment of ID-dependent value from ID-dependent  "/>
            <location file="AELogger\src\AELogger.cpp" line="82" info="static member accessed through instance "/>
        </error>
        <error id="clang-tidy-misc-no-recursion" severity="warning" msg="function &amp;#039;writeToLog&amp;#039; is within a recursive call chain " verbose="function &amp;#039;writeToLog&amp;#039; is within a recursive call chain " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="113" info="... which was the starting point of the recursive call chain; there may be other cycles"/>
            <location file="AELogger\src\AELogger.cpp" line="113" info="Frame #2: function &amp;#039;writeToLog&amp;#039; calls function &amp;#039;writeToLogDebug&amp;#039; here:"/>
            <location file="AELogger\include\AELogger.hpp" line="214" info="Frame #1: function &amp;#039;writeToLogDebug&amp;#039; calls function &amp;#039;writeToLog&amp;#039; here:"/>
            <location file="AELogger\include\AELogger.hpp" line="212" info="example recursive call chain, starting from function &amp;#039;writeToLogDebug&amp;#039;"/>
            <location file="AELogger\src\AELogger.cpp" line="90" info="function &amp;#039;writeToLog&amp;#039; is within a recursive call chain "/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-pro-bounds-pointer-arithmetic" severity="style" msg="do not use pointer arithmetic " verbose="do not use pointer arithmetic " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="111"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="113"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="128"/>
        </error>
        <error id="clang-tidy-altera-id-dependent-backward-branch" severity="style" msg="backward branch (while loop) is ID-dependent due to variable reference to &amp;#039;ptr&amp;#039; and may cause performance degradation " verbose="backward branch (while loop) is ID-dependent due to variable reference to &amp;#039;ptr&amp;#039; and may cause performance degradation " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="128"/>
        </error>
        <error id="clang-tidy-modernize-use-nullptr" severity="style" msg="use nullptr " verbose="use nullptr " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="137"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="138"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="511 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="511 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="138"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="139"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="31 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="31 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="139"/>
        </error>
        <error id="clang-tidy-modernize-redundant-void-arg" severity="style" msg="redundant void argument list in function definition " verbose="redundant void argument list in function definition " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="144"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="145"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" verbose="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="148"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="588 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="588 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="148"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" verbose="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="149"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="20 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="149"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;unsigned long long&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;unsigned long long&amp;#039; -&amp;gt; bool " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="153"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;unsigned long long&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;unsigned long long&amp;#039; -&amp;gt; bool " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="154"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="158"/>
        </error>
        <error id="clang-tidy-altera-id-dependent-backward-branch" severity="style" msg="backward branch (while loop) is ID-dependent due to variable reference to &amp;#039;ePtr&amp;#039; and may cause performance degradation " verbose="backward branch (while loop) is ID-dependent due to variable reference to &amp;#039;ePtr&amp;#039; and may cause performance degradation " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="158"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="100 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="159"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="165"/>
        </error>
        <error id="clang-tidy-cert-err33-c" severity="style" msg="the value returned by this function should be used " verbose="the value returned by this function should be used " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="147" info="inferred assignment of ID-dependent value from ID-dependent  "/>
            <location file="AELogger\src\AELogger.cpp" line="166" info="cast the expression to void to silence this warning"/>
            <location file="AELogger\src\AELogger.cpp" line="166" info="the value returned by this function should be used "/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]" verbose="do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="166"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="166"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="587 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="587 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="166"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="169"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="172"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="587 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="587 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="172"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="173"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="511 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="511 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="173"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="174"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="31 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="31 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="174"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="30 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="30 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="185"/>
        </error>
        <error id="clang-tidy-cert-err33-c" severity="style" msg="the value returned by this function should be used " verbose="the value returned by this function should be used " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="190" info="cast the expression to void to silence this warning"/>
            <location file="AELogger\src\AELogger.cpp" line="190" info="the value returned by this function should be used "/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]" verbose="do not call c-style vararg functions [cppcoreguidelines-pro-type-vararg,hicpp-vararg]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="190"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="190"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="587 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="587 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="190"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="190"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="191"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="195"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="198"/>
        </error>
        <error id="clang-tidy-modernize-loop-convert" severity="style" msg="use range-based for loop instead " verbose="use range-based for loop instead " file0="AELogger/src/AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\src\AELogger.cpp" line="198"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;a&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;a&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="55"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;a&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;a&amp;#039; is assigned a value that is never used." cwe="563" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="55"/>
        </error>
        <error id="threadsafety-unsafe-call" severity="warning" msg="sleep is MT-unsafe" verbose="sleep is MT-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_ACEngine.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="86"/>
        </error>
        <error id="y2038-unsafe-call" severity="warning" msg="time is Y2038-unsafe" verbose="time is Y2038-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_ACEngine.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="43"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="41"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="41"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="random number generator seeded with a disallowed source of seed value will generate a predictable sequence of values [cert-msc32-c,cert-msc51-cpp]" verbose="random number generator seeded with a disallowed source of seed value will generate a predictable sequence of values [cert-msc32-c,cert-msc51-cpp]" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="43"/>
        </error>
        <error id="clang-tidy-modernize-use-nullptr" severity="style" msg="use nullptr " verbose="use nullptr " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="43"/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\include\AEFrame.hpp" line="38" info="default parameter was declared here"/>
            <location file="ACEngine\main_ACEngine.cpp" line="44" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;mytm&amp;#039; of type &amp;#039;AETimer&amp;#039; can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;mytm&amp;#039; of type &amp;#039;AETimer&amp;#039; can be declared &amp;#039;const&amp;#039; " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="46"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="10000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="10000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="46"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="32 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="47"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="48"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp]" verbose="rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp]" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="49"/>
        </error>
        <error id="clang-tidy-concurrency-mt-unsafe" severity="style" msg="function is not thread safe " verbose="function is not thread safe " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="49"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;myfr&amp;#039; of type &amp;#039;AEFileReader&amp;#039; can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;myfr&amp;#039; of type &amp;#039;AEFileReader&amp;#039; can be declared &amp;#039;const&amp;#039; " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="52"/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\include\AELogger.hpp" line="141" info="default parameter was declared here"/>
            <location file="ACEngine\main_ACEngine.cpp" line="54" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="55"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="60"/>
        </error>
        <error id="clang-tidy-modernize-use-bool-literals" severity="style" msg="converting integer literal to bool, use bool literal instead " verbose="converting integer literal to bool, use bool literal instead " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="60"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="60"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp]" verbose="rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp]" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="63"/>
        </error>
        <error id="clang-tidy-concurrency-mt-unsafe" severity="style" msg="function is not thread safe " verbose="function is not thread safe " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="63"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="400 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="400 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="64"/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\include\AEFileWriter.hpp" line="230" info="default parameter was declared here"/>
            <location file="ACEngine\main_ACEngine.cpp" line="66" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" verbose="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="ACEngine\main_ACEngine.cpp" line="68"/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\include\AEFileWriter.hpp" line="194" info="default parameter was declared here"/>
            <location file="ACEngine\main_ACEngine.cpp" line="75" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\include\AELogger.hpp" line="201" info="default parameter was declared here"/>
            <location file="ACEngine\main_ACEngine.cpp" line="79" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="signConversion" severity="warning" msg="Expression &amp;#039;-1&amp;#039; has a negative value. That is converted to an unsigned value and used in an unsigned calculation." verbose="Expression &amp;#039;-1&amp;#039; has a negative value. That is converted to an unsigned value and used in an unsigned calculation." cwe="195" file0="ACEngine/main_ACEngine.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\include\AEMath.hpp" line="122"/>
        </error>
        <error id="threadsafety-unsafe-call" severity="warning" msg="sleep is MT-unsafe" verbose="sleep is MT-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_ACEngine.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\include\AEFrame.hpp" line="60"/>
        </error>
        <error id="threadsafety-unsafe-call" severity="warning" msg="sleep is MT-unsafe" verbose="sleep is MT-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_ACEngine.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AETimer\include\AETimer.hpp" line="178"/>
        </error>
        <error id="threadsafety-unsafe-call" severity="warning" msg="sleep is MT-unsafe" verbose="sleep is MT-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_ACEngine.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AETimer\include\AETimer.hpp" line="202"/>
        </error>
        <error id="syntaxError" severity="error" msg="No pair for character (&amp;quot;). Can&amp;#039;t process file. File is either invalid or unicode, which is currently not supported." verbose="No pair for character (&amp;quot;). Can&amp;#039;t process file. File is either invalid or unicode, which is currently not supported." sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="2"/>
        </error>
        <error id="clang-diagnostic-extra-tokens" severity="style" msg="extra tokens at end of #include directive " verbose="extra tokens at end of #include directive " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="2"/>
        </error>
        <error id="clang-diagnostic-invalid-pp-token" severity="style" msg="missing terminating &amp;#039;&amp;quot;&amp;#039; character " verbose="missing terminating &amp;#039;&amp;quot;&amp;#039; character " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="2"/>
        </error>
        <error id="clang-tidy-google-build-using-namespace" severity="style" msg="do not use namespace using-directives; use using-declarations instead " verbose="do not use namespace using-directives; use using-declarations instead " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="7"/>
        </error>
        <error id="clang-tidy-altera-struct-pack-align" severity="style" msg="accessing fields in struct &amp;#039;Tempstruct&amp;#039; is inefficient due to padding; only needs 9 bytes but is using 12 bytes " verbose="accessing fields in struct &amp;#039;Tempstruct&amp;#039; is inefficient due to padding; only needs 9 bytes but is using 12 bytes " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="10" info="use &amp;quot;__attribute__((packed))&amp;quot; to reduce the amount of padding applied to struct &amp;#039;Tempstruct&amp;#039;"/>
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="10" info="accessing fields in struct &amp;#039;Tempstruct&amp;#039; is inefficient due to padding; only needs 9 bytes but is using 12 bytes "/>
        </error>
        <error id="clang-tidy-altera-struct-pack-align" severity="style" msg="accessing fields in struct &amp;#039;Tempstruct&amp;#039; is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 16 bytes " verbose="accessing fields in struct &amp;#039;Tempstruct&amp;#039; is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 16 bytes " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="10" info="use &amp;quot;__attribute__((aligned(16)))&amp;quot; to align struct &amp;#039;Tempstruct&amp;#039; to 16 bytes"/>
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="10" info="accessing fields in struct &amp;#039;Tempstruct&amp;#039; is inefficient due to poor alignment; currently aligned to 4 bytes, but recommended alignment is 16 bytes "/>
        </error>
        <error id="clang-tidy-google-runtime-int" severity="style" msg="consider replacing &amp;#039;short&amp;#039; with &amp;#039;int16&amp;#039; " verbose="consider replacing &amp;#039;short&amp;#039; with &amp;#039;int16&amp;#039; " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="11"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="12345 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="12345 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="11"/>
        </error>
        <error id="clang-tidy-google-runtime-int" severity="style" msg="consider replacing &amp;#039;unsigned short&amp;#039; with &amp;#039;uint16&amp;#039; " verbose="consider replacing &amp;#039;unsigned short&amp;#039; with &amp;#039;uint16&amp;#039; " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="12"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="54321 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="54321 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="12"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="12345.67890f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="12345.67890f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="14"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="floating point literal has suffix &amp;#039;f&amp;#039;, which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]" verbose="floating point literal has suffix &amp;#039;f&amp;#039;, which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="14"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="18"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="18"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;a&amp;#039; of type &amp;#039;std::vector&amp;lt;char&amp;gt;&amp;#039; can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;a&amp;#039; of type &amp;#039;std::vector&amp;lt;char&amp;gt;&amp;#039; can be declared &amp;#039;const&amp;#039; " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="21"/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="..\..\..\..\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector" line="656" info="default parameter was declared here"/>
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="21" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="21"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;b&amp;#039; of type &amp;#039;std::string&amp;#039; (aka &amp;#039;basic_string&amp;lt;char, char_traits&amp;lt;char&amp;gt;, allocator&amp;lt;char&amp;gt;&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;b&amp;#039; of type &amp;#039;std::string&amp;#039; (aka &amp;#039;basic_string&amp;lt;char, char_traits&amp;lt;char&amp;gt;, allocator&amp;lt;char&amp;gt;&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="22"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;b&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;b&amp;#039; is too short, expected at least 3 characters " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="22"/>
        </error>
        <error id="clang-tidy-bugprone-string-literal-with-embedded-nul" severity="style" msg="truncated string literal with embedded NUL character " verbose="truncated string literal with embedded NUL character " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="22"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;c&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;c&amp;#039; is too short, expected at least 3 characters " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="23"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;d&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;d&amp;#039; is too short, expected at least 3 characters " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="24"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="random number generator seeded with a disallowed source of seed value will generate a predictable sequence of values [cert-msc32-c,cert-msc51-cpp]" verbose="random number generator seeded with a disallowed source of seed value will generate a predictable sequence of values [cert-msc32-c,cert-msc51-cpp]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="25"/>
        </error>
        <error id="clang-tidy-modernize-use-nullptr" severity="style" msg="use nullptr " verbose="use nullptr " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="25"/>
        </error>
        <error id="clang-tidy-google-readability-casting" severity="style" msg="C-style casts are discouraged; use static_cast " verbose="C-style casts are discouraged; use static_cast " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="32"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="32"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="33"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="1024 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="33"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp]" verbose="rand() has limited randomness; use C++11 random library instead [cert-msc30-c,cert-msc50-cpp]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="34"/>
        </error>
        <error id="clang-tidy-concurrency-mt-unsafe" severity="style" msg="function is not thread safe " verbose="function is not thread safe " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="34"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="45"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="55"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="61"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="2000 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileWriter/main_AEFileWriter.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\main_AEFileWriter.cpp" line="71"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &amp;#039;Test3&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Class &amp;#039;Test3&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="8"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;a&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;a&amp;#039; is assigned a value that is never used." cwe="563" file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="18"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]" verbose="single-argument constructors must be marked explicit to avoid unintentional implicit conversions [google-explicit-constructor,hicpp-explicit-conversions]" file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="8"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="parameter name &amp;#039;s&amp;#039; is too short, expected at least 3 characters " verbose="parameter name &amp;#039;s&amp;#039; is too short, expected at least 3 characters " file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="8"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\include\AEModuleBase.hpp" line="25" info="expanded from macro &amp;#039;REGISTER_CLASS&amp;#039;"/>
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="15" info="use a trailing return type for this function "/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="17"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="17"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;a&amp;#039; of type &amp;#039;Test3&amp;#039; can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;a&amp;#039; of type &amp;#039;Test3&amp;#039; can be declared &amp;#039;const&amp;#039; " file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="18"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AEModuleBase/main_AEModuleBase.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="18"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;getTypeName&amp;#039; is never used." verbose="The function &amp;#039;getTypeName&amp;#039; is never used." cwe="561" sinceDate="yyyy-MM-dd">
            <location file="AEModuleBase\main_AEModuleBase.cpp" line="15"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &amp;quot;include/AEFlags.hpp&amp;quot; not found." verbose="Include file: &amp;quot;include/AEFlags.hpp&amp;quot; not found." sinceDate="yyyy-MM-dd">
            <location file="AEMisc\include\AETrigLookup.hpp" line="21"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &amp;quot;include/AEMath.hpp&amp;quot; not found." verbose="Include file: &amp;quot;include/AEMath.hpp&amp;quot; not found." sinceDate="yyyy-MM-dd">
            <location file="AEMisc\include\AETrigLookup.hpp" line="22"/>
        </error>
        <error id="clang-diagnostic-error" severity="style" msg="&amp;#039;include/AEFlags.hpp&amp;#039; file not found " verbose="&amp;#039;include/AEFlags.hpp&amp;#039; file not found " file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\include\AETrigLookup.hpp" line="21"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="14"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="16"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="360 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="360 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="16"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" verbose="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="17"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" verbose="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="18"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" verbose="narrowing conversion from &amp;#039;int&amp;#039; to &amp;#039;float&amp;#039; [bugprone-narrowing-conversions,cppcoreguidelines-narrowing-conversions]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="19"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="128 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="128 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="30"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="127 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="127 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="30"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="64 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="30"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="255 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="255 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="30"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="1234 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="1234 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEMisc/main_Misc.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEMisc\main_Misc.cpp" line="46"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &amp;#039;name&amp;#039; should be passed by const reference." verbose="Parameter &amp;#039;name&amp;#039; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="14"/>
        </error>
        <error id="threadsafety-unsafe-call" severity="warning" msg="sleep is MT-unsafe" verbose="sleep is MT-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_AELogger.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="29"/>
        </error>
        <error id="threadsafety-unsafe-call" severity="warning" msg="sleep is MT-unsafe" verbose="sleep is MT-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_AELogger.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="58"/>
        </error>
        <error id="clang-tidy-misc-unused-using-decls" severity="style" msg="using decl &amp;#039;cout&amp;#039; is unused " verbose="using decl &amp;#039;cout&amp;#039; is unused " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="6" info="remove the using"/>
            <location file="AELogger\main_AELogger.cpp" line="6" info="using decl &amp;#039;cout&amp;#039; is unused "/>
        </error>
        <error id="clang-tidy-fuchsia-statically-constructed-objects" severity="style" msg="static objects are disallowed; if possible, use a constexpr constructor instead " verbose="static objects are disallowed; if possible, use a constexpr constructor instead " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="9"/>
        </error>
        <error id="clang-tidy-cert-err58-cpp" severity="style" msg="initialization of &amp;#039;mylog&amp;#039; with static storage duration may throw an exception that cannot be caught " verbose="initialization of &amp;#039;mylog&amp;#039; with static storage duration may throw an exception that cannot be caught " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\include\AELogger.hpp" line="141" info="possibly throwing constructor declared here"/>
            <location file="AELogger\main_AELogger.cpp" line="9" info="initialization of &amp;#039;mylog&amp;#039; with static storage duration may throw an exception that cannot be caught "/>
        </error>
        <error id="clang-tidy-cppcoreguidelines-avoid-non-const-global-variables" severity="style" msg="variable &amp;#039;mylog&amp;#039; is non-const and globally accessible, consider making it const " verbose="variable &amp;#039;mylog&amp;#039; is non-const and globally accessible, consider making it const " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="9"/>
        </error>
        <error id="clang-tidy-fuchsia-default-arguments-calls" severity="style" msg="calling a function that uses a default argument is disallowed " verbose="calling a function that uses a default argument is disallowed " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\include\AELogger.hpp" line="141" info="default parameter was declared here"/>
            <location file="AELogger\main_AELogger.cpp" line="9" info="calling a function that uses a default argument is disallowed "/>
        </error>
        <error id="clang-tidy-misc-unused-parameters" severity="style" msg="parameter &amp;#039;name&amp;#039; is unused " verbose="parameter &amp;#039;name&amp;#039; is unused " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="14"/>
        </error>
        <error id="clang-tidy-performance-unnecessary-value-param" severity="performance" msg="the const qualified parameter &amp;#039;name&amp;#039; is copied for each invocation; consider making it a reference " verbose="the const qualified parameter &amp;#039;name&amp;#039; is copied for each invocation; consider making it a reference " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="14"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="18"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="20"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="21"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="22"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="23"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="24"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="25"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="26"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="27"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="28"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="35"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="35"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="65535 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="65535 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="38"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;t1&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;t1&amp;#039; is too short, expected at least 3 characters " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="42"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;t2&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;t2&amp;#039; is too short, expected at least 3 characters " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="46"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="47"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="48"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="49"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="50"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="51"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="52"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="53"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="54"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="55"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" verbose="do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,hicpp-no-array-decay]" file0="AELogger/main_AELogger.cpp" sinceDate="yyyy-MM-dd">
            <location file="AELogger\main_AELogger.cpp" line="56"/>
        </error>
        <error id="threadsafety-unsafe-call" severity="warning" msg="sleep is MT-unsafe" verbose="sleep is MT-unsafe" file0="__cppcheck/ACEngine-cppcheck-build-dir/main_AEFrame.cpp.analyzerinfo.25412.dump" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="14"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="5"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="5"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="7"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="60 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="60 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="7"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="8"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="10"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="11"/>
        </error>
        <error id="clang-tidy-modernize-use-bool-literals" severity="style" msg="converting integer literal to bool, use bool literal instead " verbose="converting integer literal to bool, use bool literal instead " file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="11"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AEFrame/main_AEFrame.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFrame\main_AEFrame.cpp" line="11"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="6"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="6"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;a&amp;#039; of type &amp;#039;AETimer&amp;#039; can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;a&amp;#039; of type &amp;#039;AETimer&amp;#039; can be declared &amp;#039;const&amp;#039; " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="8"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="8"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="8"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;mytm&amp;#039; of type &amp;#039;AETimer&amp;#039; can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;mytm&amp;#039; of type &amp;#039;AETimer&amp;#039; can be declared &amp;#039;const&amp;#039; " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="10"/>
        </error>
        <error id="clang-tidy-readability-static-accessed-through-instance" severity="style" msg="static member accessed through instance " verbose="static member accessed through instance " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="12"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="13"/>
        </error>
        <error id="clang-tidy-modernize-use-bool-literals" severity="style" msg="converting integer literal to bool, use bool literal instead " verbose="converting integer literal to bool, use bool literal instead " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="13"/>
        </error>
        <error id="clang-tidy-readability-implicit-bool-conversion" severity="style" msg="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " verbose="implicit conversion &amp;#039;int&amp;#039; -&amp;gt; bool " file0="AETimer/main_AETimer.cpp" sinceDate="yyyy-MM-dd">
            <location file="AETimer\main_AETimer.cpp" line="13"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="7"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="23"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="23"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="12345 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="12345 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="26"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;a&amp;#039; of type &amp;#039;AEVec2Int&amp;#039; (aka &amp;#039;AEVector&amp;lt;int, 2&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;a&amp;#039; of type &amp;#039;AEVec2Int&amp;#039; (aka &amp;#039;AEVector&amp;lt;int, 2&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="28"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="28"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;b&amp;#039; of type &amp;#039;AEVec3Int&amp;#039; (aka &amp;#039;AEVector&amp;lt;int, 3&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;b&amp;#039; of type &amp;#039;AEVec3Int&amp;#039; (aka &amp;#039;AEVector&amp;lt;int, 3&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="29"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;b&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;b&amp;#039; is too short, expected at least 3 characters " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="29"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="5 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="29"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;c&amp;#039; of type &amp;#039;AEVec2Float&amp;#039; (aka &amp;#039;AEVector&amp;lt;float, 2&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;c&amp;#039; of type &amp;#039;AEVec2Float&amp;#039; (aka &amp;#039;AEVector&amp;lt;float, 2&amp;gt;&amp;#039;) can be declared &amp;#039;const&amp;#039; " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="30"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;c&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;c&amp;#039; is too short, expected at least 3 characters " file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="30"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="3.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="3.1f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="30"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="floating point literal has suffix &amp;#039;f&amp;#039;, which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]" verbose="floating point literal has suffix &amp;#039;f&amp;#039;, which is not uppercase [hicpp-uppercase-literal-suffix,readability-uppercase-literal-suffix]" file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="30"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="4.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="4.5f is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEVector/main_AEVector.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="30"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;isEqual&amp;#039; is never used." verbose="The function &amp;#039;isEqual&amp;#039; is never used." cwe="561" sinceDate="yyyy-MM-dd">
            <location file="AEVector\main_AEVector.cpp" line="7"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &amp;#039;a&amp;#039; can be declared as reference to const" verbose="Parameter &amp;#039;a&amp;#039; can be declared as reference to const" cwe="398" file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="10"/>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &amp;#039;ab::a&amp;#039; is never used." verbose="struct member &amp;#039;ab::a&amp;#039; is never used." cwe="563" file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="6"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;bl&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;bl&amp;#039; is assigned a value that is never used." cwe="563" file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="26"/>
        </error>
        <error id="clang-tidy-google-build-using-namespace" severity="style" msg="do not use namespace using-directives; use using-declarations instead " verbose="do not use namespace using-directives; use using-declarations instead " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="3"/>
        </error>
        <error id="clang-tidy-altera-struct-pack-align" severity="style" msg="accessing fields in struct &amp;#039;ab&amp;#039; is inefficient due to poor alignment; currently aligned to 1 bytes, but recommended alignment is 16 bytes " verbose="accessing fields in struct &amp;#039;ab&amp;#039; is inefficient due to poor alignment; currently aligned to 1 bytes, but recommended alignment is 16 bytes " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="5" info="use &amp;quot;__attribute__((aligned(16)))&amp;quot; to align struct &amp;#039;ab&amp;#039; to 16 bytes"/>
            <location file="AEFileReader\main_AEFileReader.cpp" line="5" info="accessing fields in struct &amp;#039;ab&amp;#039; is inefficient due to poor alignment; currently aligned to 1 bytes, but recommended alignment is 16 bytes "/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" verbose="do not declare C-style arrays, use std::array&amp;lt;&amp;gt; instead [cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-avoid-c-arrays]" file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="6"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="16 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="16 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="6"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="10"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="parameter name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="parameter name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="10"/>
        </error>
        <error id="clang-tidy-altera-unroll-loops" severity="style" msg="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " verbose="kernel performance could be improved by unrolling this loop with a &amp;#039;#pragma unroll&amp;#039; directive " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="13"/>
        </error>
        <error id="clang-tidy-modernize-loop-convert" severity="style" msg="use range-based for loop instead " verbose="use range-based for loop instead " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="13"/>
        </error>
        <error id="clang-tidy-bugprone-exception-escape" severity="style" msg="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " verbose="an exception may be thrown in function &amp;#039;main&amp;#039; which should not throw exceptions " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="20"/>
        </error>
        <error id="clang-tidy-modernize-use-trailing-return-type" severity="style" msg="use a trailing return type for this function " verbose="use a trailing return type for this function " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="20"/>
        </error>
        <error id="clang-tidy-readability-isolate-declaration" severity="style" msg="multiple declarations in a single statement reduces readability " verbose="multiple declarations in a single statement reduces readability " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="24"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;a&amp;#039; is too short, expected at least 3 characters " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="24"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;b&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;b&amp;#039; is too short, expected at least 3 characters " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="24"/>
        </error>
        <error id="clang-tidy-misc-const-correctness" severity="warning" msg="variable &amp;#039;bl&amp;#039; of type &amp;#039;bool&amp;#039; can be declared &amp;#039;const&amp;#039; " verbose="variable &amp;#039;bl&amp;#039; of type &amp;#039;bool&amp;#039; can be declared &amp;#039;const&amp;#039; " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="26"/>
        </error>
        <error id="clang-tidy-readability-identifier-length" severity="style" msg="variable name &amp;#039;bl&amp;#039; is too short, expected at least 3 characters " verbose="variable name &amp;#039;bl&amp;#039; is too short, expected at least 3 characters " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="26"/>
        </error>
        <error id="clang-tidy-google-readability-casting" severity="style" msg="C-style casts are discouraged; use static_cast " verbose="C-style casts are discouraged; use static_cast " file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="28"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="200 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="200 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="28"/>
        </error>
        <error id="clang-analyzer" severity="warning" msg="200 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" verbose="200 is a magic number; consider replacing it with a named constant [cppcoreguidelines-avoid-magic-numbers,readability-magic-numbers]" file0="AEFileReader/main_AEFileReader.cpp" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="30"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;outputVec&amp;#039; is never used." verbose="The function &amp;#039;outputVec&amp;#039; is never used." cwe="561" sinceDate="yyyy-MM-dd">
            <location file="AEFileReader\main_AEFileReader.cpp" line="10"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &amp;quot;include/AEModuleBase.hpp&amp;quot; not found." verbose="Include file: &amp;quot;include/AEModuleBase.hpp&amp;quot; not found." sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\include\AEFileWriter.hpp" line="19"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &amp;quot;include/AEUtils.hpp&amp;quot; not found." verbose="Include file: &amp;quot;include/AEUtils.hpp&amp;quot; not found." sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\include\AEFileWriter.hpp" line="20"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &amp;quot;include/AETypedefs.hpp&amp;quot; not found." verbose="Include file: &amp;quot;include/AETypedefs.hpp&amp;quot; not found." sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\include\AEFileWriter.hpp" line="21"/>
        </error>
        <error id="missingInclude" severity="information" msg="Include file: &amp;quot;include/AEFlags.hpp&amp;quot; not found." verbose="Include file: &amp;quot;include/AEFlags.hpp&amp;quot; not found." sinceDate="yyyy-MM-dd">
            <location file="AEFileWriter\include\AEFileWriter.hpp" line="22"/>
        </error>
    </errors>
</results>
