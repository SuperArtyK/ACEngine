.TH "AEMisc/include/AETypedefs.hpp" 3 "Thu Feb 29 2024 21:13:54" "Version v0.0.8.5a" "ArtyK's Console Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AEMisc/include/AETypedefs.hpp
.SH SYNOPSIS
.br
.PP
\fR#include <climits>\fP
.br
\fR#include <chrono>\fP
.br
\fR#include <thread>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBUCINT_MAX\fP   UCHAR_MAX"
.br
.RI "Macro for the maximum value of the ucint type (unsigned char/8bit int) "
.ti -1c
.RI "#define \fBUCINT_MIN\fP   0"
.br
.RI "Macro for the minimum value of the ucint type (unsigned char/8bit int) "
.ti -1c
.RI "#define \fBCINT_MAX\fP   SCHAR_MAX"
.br
.RI "Macro for the maximum value of the cint type (signed char/8bit int) "
.ti -1c
.RI "#define \fBCINT_MIN\fP   SCHAR_MIN"
.br
.RI "Macro for the minimum value of the cint type (signed char/8bit int) "
.ti -1c
.RI "#define \fBULLINT_MAX\fP   ULLONG_MAX"
.br
.RI "Macro for the maximum value of the ullint type (unsigned long long/64bit int) "
.ti -1c
.RI "#define \fBULLINT_MIN\fP   0"
.br
.RI "Macro for the minimum value of the ullint type (unsigned long long/64bit int) "
.ti -1c
.RI "#define \fBLLINT_MAX\fP   LLONG_MAX"
.br
.RI "Macro for the maximum value of the llint type (signed long long/64bit int) "
.ti -1c
.RI "#define \fBLLINT_MIN\fP   LLONG_MIN"
.br
.RI "Macro for the minimum value of the llint type (signed long long/64bit int) "
.ti -1c
.RI "#define \fBSINT_MAX\fP   INT32_MAX"
.br
.RI "Macro for the maximum value of the sint type (signed 32bit int) "
.ti -1c
.RI "#define \fBSINT_MIN\fP   INT32_MIN"
.br
.RI "Macro for the minimum value of the sint type (signed 32bit int) "
.ti -1c
.RI "#define \fBUINT_MIN\fP   0"
.br
.RI "Macro for the minimum value of the uint type (unsigned long long/64bit int) "
.ti -1c
.RI "#define \fBUSHRT_MIN\fP   0"
.br
.RI "Macro for the minimum value of the ushrt type (unsigned short/16bit int) "
.ti -1c
.RI "#define \fBAENULL\fP   0"
.br
.RI "Macro for the NULL as a 0, not a pointer (we have nullptr for that) "
.ti -1c
.RI "#define \fBgetSysTime\fP()   std::chrono::system_clock::now()"
.br
.RI "A macro to get the system time's now() "
.ti -1c
.RI "#define \fBgetHighResTime\fP()   std::chrono::high_resolution_clock::now()"
.br
.RI "A macro to get the high resolution time's now() "
.ti -1c
.RI "#define \fBgetSteadyTime\fP()   std::chrono::steady_clock::now()"
.br
.RI "A macro to get the steady time's now() "
.ti -1c
.RI "#define \fBcalculateTime\fP(tp1,  tp2,  type)   std::chrono::duration<type>(tp2 \- tp1)\&.count()"
.br
.RI "A macro to calculate time between 2 timepoints as some type\&. "
.ti -1c
.RI "#define \fBmilliSec\fP(ms)   std::chrono::milliseconds(ms)"
.br
.RI "A macro as the shortcut of chrono's milliseconds\&. "
.ti -1c
.RI "#define \fBmicroSec\fP(us)   std::chrono::microseconds(us)"
.br
.RI "A macro as the shortcut of chrono's microseconds\&. "
.ti -1c
.RI "#define \fBsleepUntil\fP(sec)   std::this_thread::sleep_until(sec)"
.br
.RI "A macro as the shortcut of thread's sleep_until\&. "
.ti -1c
.RI "#define \fBsleepFor\fP(sec)   std::this_thread::sleep_for(sec)"
.br
.RI "A macro as the shortcut of thread's sleep_for\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint8_t \fBucint\fP"
.br
.RI "A shortcut for small unsigned (char) integer (8bit) "
.ti -1c
.RI "typedef int8_t \fBcint\fP"
.br
.RI "A shortcut for small signed (char) integer (8bit) "
.ti -1c
.RI "typedef unsigned long long \fBullint\fP"
.br
.RI "A shortcut for big unsigned (long long) integer (64bit) "
.ti -1c
.RI "typedef long long \fBllint\fP"
.br
.RI "A shortcut for big signed (long long) integer (64bit) "
.ti -1c
.RI "typedef signed int \fBsint\fP"
.br
.RI "A shortcut for a just signed int (32bit) "
.ti -1c
.RI "typedef unsigned int \fBuint\fP"
.br
.RI "A shortcut for a just unsigned int (32bit) "
.ti -1c
.RI "typedef unsigned short \fBushort\fP"
.br
.RI "A shortcut for a just unsigned short (at least 16 bit) "
.ti -1c
.RI "typedef std::chrono::system_clock \fBSysClock\fP"
.br
.RI "A shortcut for chrono's system time\&. "
.ti -1c
.RI "typedef std::chrono::high_resolution_clock \fBHighResClock\fP"
.br
.RI "A shortcut for chrono's high resolution time\&. "
.ti -1c
.RI "typedef std::chrono::steady_clock \fBSteadyClock\fP"
.br
.RI "A shortcut for chrono's steady time\&. "
.ti -1c
.RI "template<class Clock , class Duration  = typename Clock::duration> using \fBtimePoint\fP = std::chrono::time_point<Clock, Duration>"
.br
.RI "An alias for the std::chrono::time_point to not type\&.\&.\&.as much\&. "
.ti -1c
.RI "template<class Rep , class Period  = std::ratio<1>> using \fBtimeDur\fP = std::chrono::duration<Rep, Period>"
.br
.RI "A macro as the shortcut of chrono's time duration\&. Same reason as timePoint\&. "
.in -1c
.SH "Detailed Description"
.PP 
This file contains typedefs/aliases of the variable types that are long and are used often/inconvenient to use in their long original naming\&.
.PP
Should not cause everything to break :) 
.PP
Definition in file \fBAETypedefs\&.hpp\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define AENULL   0"

.PP
Macro for the NULL as a 0, not a pointer (we have nullptr for that) 
.PP
Definition at line \fB82\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define calculateTime(tp1, tp2, type)   std::chrono::duration<type>(tp2 \- tp1)\&.count()"

.PP
A macro to calculate time between 2 timepoints as some type\&. 
.PP
\fBParameters\fP
.RS 4
\fItp1\fP The first, starting point of time (time point)
.br
\fItp2\fP The second, starting point of time (time point)
.br
\fItype\fP The type of the resulting operation
.RE
.PP

.PP
Definition at line \fB110\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define CINT_MAX   SCHAR_MAX"

.PP
Macro for the maximum value of the cint type (signed char/8bit int) 
.PP
Definition at line \fB51\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define CINT_MIN   SCHAR_MIN"

.PP
Macro for the minimum value of the cint type (signed char/8bit int) 
.PP
Definition at line \fB54\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define getHighResTime()   std::chrono::high_resolution_clock::now()"

.PP
A macro to get the high resolution time's now() 
.PP
Definition at line \fB100\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define getSteadyTime()   std::chrono::steady_clock::now()"

.PP
A macro to get the steady time's now() 
.PP
Definition at line \fB103\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define getSysTime()   std::chrono::system_clock::now()"

.PP
A macro to get the system time's now() 
.PP
Definition at line \fB97\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define LLINT_MAX   LLONG_MAX"

.PP
Macro for the maximum value of the llint type (signed long long/64bit int) 
.PP
Definition at line \fB63\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define LLINT_MIN   LLONG_MIN"

.PP
Macro for the minimum value of the llint type (signed long long/64bit int) 
.PP
Definition at line \fB66\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define microSec(us)   std::chrono::microseconds(us)"

.PP
A macro as the shortcut of chrono's microseconds\&. 
.PP
\fBParameters\fP
.RS 4
\fIus\fP The number of microseconds to convert to
.RE
.PP

.PP
Definition at line \fB140\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define milliSec(ms)   std::chrono::milliseconds(ms)"

.PP
A macro as the shortcut of chrono's milliseconds\&. 
.PP
\fBParameters\fP
.RS 4
\fIms\fP The number of milliseconds to convert to
.RE
.PP

.PP
Definition at line \fB136\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define SINT_MAX   INT32_MAX"

.PP
Macro for the maximum value of the sint type (signed 32bit int) 
.PP
Definition at line \fB69\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define SINT_MIN   INT32_MIN"

.PP
Macro for the minimum value of the sint type (signed 32bit int) 
.PP
Definition at line \fB72\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define sleepFor(sec)   std::this_thread::sleep_for(sec)"

.PP
A macro as the shortcut of thread's sleep_for\&. 
.PP
\fBParameters\fP
.RS 4
\fIsec\fP The chronos's duration object (milliseconds, seconds, etc)
.RE
.PP

.PP
Definition at line \fB150\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define sleepUntil(sec)   std::this_thread::sleep_until(sec)"

.PP
A macro as the shortcut of thread's sleep_until\&. 
.PP
\fBParameters\fP
.RS 4
\fIsec\fP The chronos's duration object (milliseconds, seconds, etc)
.RE
.PP

.PP
Definition at line \fB146\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define UCINT_MAX   UCHAR_MAX"

.PP
Macro for the maximum value of the ucint type (unsigned char/8bit int) 
.PP
Definition at line \fB45\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define UCINT_MIN   0"

.PP
Macro for the minimum value of the ucint type (unsigned char/8bit int) 
.PP
Definition at line \fB48\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define UINT_MIN   0"

.PP
Macro for the minimum value of the uint type (unsigned long long/64bit int) 
.PP
Definition at line \fB76\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define ULLINT_MAX   ULLONG_MAX"

.PP
Macro for the maximum value of the ullint type (unsigned long long/64bit int) 
.PP
Definition at line \fB57\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define ULLINT_MIN   0"

.PP
Macro for the minimum value of the ullint type (unsigned long long/64bit int) 
.PP
Definition at line \fB60\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "#define USHRT_MIN   0"

.PP
Macro for the minimum value of the ushrt type (unsigned short/16bit int) 
.PP
Definition at line \fB79\fP of file \fBAETypedefs\&.hpp\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef int8_t \fBcint\fP"

.PP
A shortcut for small signed (char) integer (8bit) 
.PP
Definition at line \fB25\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef std::chrono::high_resolution_clock \fBHighResClock\fP"

.PP
A shortcut for chrono's high resolution time\&. 
.PP
Definition at line \fB90\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef long long \fBllint\fP"

.PP
A shortcut for big signed (long long) integer (64bit) 
.PP
Definition at line \fB31\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef signed int \fBsint\fP"

.PP
A shortcut for a just signed int (32bit) 
.PP
Definition at line \fB34\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef std::chrono::steady_clock \fBSteadyClock\fP"

.PP
A shortcut for chrono's steady time\&. 
.PP
Definition at line \fB93\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef std::chrono::system_clock \fBSysClock\fP"

.PP
A shortcut for chrono's system time\&. 
.PP
Definition at line \fB87\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "template<class Rep , class Period  = std::ratio<1>> using \fBtimeDur\fP = std::chrono::duration<Rep, Period>"

.PP
A macro as the shortcut of chrono's time duration\&. Same reason as timePoint\&. An alias for the std::chrono::duration to not type as much
.PP
\fBTemplate Parameters\fP
.RS 4
\fIRep\fP An arithmetic type representing the number of ticks
.br
\fIPeriod\fP a std::ratio representing the tick period (i\&.e\&. the number of second's fractions per tick)
.RE
.PP

.PP
Definition at line \fB132\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "template<class Clock , class Duration  = typename Clock::duration> using \fBtimePoint\fP = std::chrono::time_point<Clock, Duration>"

.PP
An alias for the std::chrono::time_point to not type\&.\&.\&.as much\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fIClock\fP The clock (system, hi-res, steady) on which this time point is measured
.br
\fIDuration\fP a std::chrono::duration type used to measure the time since epoch
.RE
.PP

.PP
Definition at line \fB121\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef uint8_t \fBucint\fP"

.PP
A shortcut for small unsigned (char) integer (8bit) 
.PP
Definition at line \fB22\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef unsigned int \fBuint\fP"

.PP
A shortcut for a just unsigned int (32bit) 
.PP
Definition at line \fB37\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef unsigned long long \fBullint\fP"

.PP
A shortcut for big unsigned (long long) integer (64bit) 
.PP
Definition at line \fB28\fP of file \fBAETypedefs\&.hpp\fP\&.
.SS "typedef unsigned short \fBushort\fP"

.PP
A shortcut for a just unsigned short (at least 16 bit) 
.PP
Definition at line \fB40\fP of file \fBAETypedefs\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ArtyK's Console Engine from the source code\&.
