.TH "AEMisc/include/AETrigLookup.hpp" 3 "Sat Jan 20 2024 16:30:37" "Version v0.0.8.5a" "ArtyK's Console Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AEMisc/include/AETrigLookup.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'AEFlags\&.hpp'\fP
.br
\fC#include 'AEMath\&.hpp'\fP
.br
\fC#include <cfloat>\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBace\fP"
.br
.RI "This namespace contains all of things that any of the part of program can use, and is useful\&. "
.ti -1c
.RI "namespace \fBace::math\fP"
.br
.RI "Mathematical functions and other things usefull in math\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#\fBdefine\fP \fBAETRIG_TABLE_SIZE\fP   360"
.br
.RI "A macro for the size of the trigonometric function lookup tables\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBconstexpr\fP std::size_t \fBace::math::_getTrigTableIndex\fP (\fBconst\fP \fBllint\fP \fBa\fP) \fBnoexcept\fP"
.br
.RI "Returns the index to the trig table from the given (int) degree number\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::sinDeg_table\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Rounds the degrees value, and looks up the value of sine in the table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cosDeg_table\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Rounds the degrees value, and looks up the value of cosine in the table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::tanDeg_table\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Rounds the degrees value, and looks up the value of tangent in the table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cotDeg_table\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Rounds the degrees value, and looks up the value of cotangent in the table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cscDeg_table\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Rounds the degrees value, and looks up the value of cosecant in the table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::secDeg_table\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Rounds the degrees value, and looks up the value of secant in the table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::sinDeg_tableInterp\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Calculates the interpolated sine value from the sine lookup table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cosDeg_tableInterp\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Calculates the interpolated sine value from the cosine lookup table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::tanDeg_tableInterp\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Calculates the interpolated sine value from the tangent lookup table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cotDeg_tableInterp\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Calculates the interpolated sine value from the cotangent lookup table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cscDeg_tableInterp\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Approximates the interpolated sine value from the cosecant lookup table\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::secDeg_tableInterp\fP (\fBconst\fP \fBfloat\fP \fBdegrees\fP) \fBnoexcept\fP"
.br
.RI "Calculates the interpolated sine value from the secant lookup table\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::sinTable\fP [360]"
.br
.RI "A lookup table for sin values\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cosTable\fP [360]"
.br
.RI "A lookup table for cos values\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::tanTable\fP [360]"
.br
.RI "A lookup table for tan values\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cotTable\fP [360]"
.br
.RI "A lookup table for cot values\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::cscTable\fP [360]"
.br
.RI "A lookup table for csc values\&. "
.ti -1c
.RI "\fBconstexpr\fP \fBfloat\fP \fBace::math::secTable\fP [360]"
.br
.RI "A lookup table for sec values\&. "
.in -1c
.SH "Detailed Description"
.PP 
This file contains the results for the trigonometric function lookup tables\&. These will be insanely fast, almost as the direct memory access (since just value in array), but won't offer much of precision -- within 1 degree\&. (Un)Define ENGINE_ENABLE_MATH_LOOKUP flag in \fBAEFlags\&.hpp\fP to enable/disable this\&.
.PP
\fBTodo\fP
.RS 4
Add the ability to calculate the tables at compile time + control the size (36 elements or 3600, etc) Maybe it's a future (c++26) thing
.RE
.PP
.PP
Should not cause everything to break :) 
.PP
Definition in file \fBAETrigLookup\&.hpp\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#\fBdefine\fP AETRIG_TABLE_SIZE   360"

.PP
A macro for the size of the trigonometric function lookup tables\&. 
.PP
\fBNote\fP
.RS 4
For now - do not touch! 
.RE
.PP

.PP
Definition at line \fB26\fP of file \fBAETrigLookup\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ArtyK's Console Engine from the source code\&.
