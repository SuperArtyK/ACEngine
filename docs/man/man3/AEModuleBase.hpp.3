.TH "AEModuleBase/include/AEModuleBase.hpp" 3 "Sat Jan 20 2024 16:30:37" "Version v0.0.8.5a" "ArtyK's Console Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AEModuleBase/include/AEModuleBase.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'include/AETypedefs\&.hpp'\fP
.br
\fC#include <atomic>\fP
.br
\fC#include <string>\fP
.br
\fC#include <string_view>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fB__AEModuleBase< T >\fP"
.br
.RI "This is a base class for all basic modules, meaning that the module is not using other modules to work\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#\fBdefine\fP \fBREGISTER_MODULE\fP(T)   \fBtemplate\fP<> \fBconst\fP \fBinline\fP std::string_view \fB__AEModuleBase\fP<T>::m_sModulename = #T;"
.br
.RI "Adds module name to inherit from \fB__AEModuleBase\fP\&. "
.ti -1c
.RI "#\fBdefine\fP \fBENGINE_MODULE_ERR_NOERROR\fP   0"
.br
.RI "Global 'no error' return flag for all engine modules\&. "
.in -1c
.SH "Detailed Description"
.PP 
This file contains the code for the module that all (utility) modules base on in the ArtyK's Console Engine class\&.
.PP
Should not cause everything to break :) 
.PP
Definition in file \fBAEModuleBase\&.hpp\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#\fBdefine\fP ENGINE_MODULE_ERR_NOERROR   0"

.PP
Global 'no error' return flag for all engine modules\&. 
.PP
Definition at line \fB22\fP of file \fBAEModuleBase\&.hpp\fP\&.
.SS "#\fBdefine\fP REGISTER_MODULE(T)   \fBtemplate\fP<> \fBconst\fP \fBinline\fP std::string_view \fB__AEModuleBase\fP<T>::m_sModulename = #T;"

.PP
Adds module name to inherit from \fB__AEModuleBase\fP\&. 
.PP
Definition at line \fB19\fP of file \fBAEModuleBase\&.hpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ArtyK's Console Engine from the source code\&.
